from keras.models import Modelfrom keras.preprocessing.image import load_imgfrom keras.preprocessing.image import img_to_arrayimport matplotlib.pyplot as pltfrom numpy import expand_dimsdef gen_feature_map(model, layer_out, image_in):    model_e = Model(inputs=model.inputs, outputs=model.layers[layer_out].output)    img = load_img(image_in, target_size=(224,224))    img = img_to_array(img)    #expand dimension to represent sample 1 (m=1)    img = expand_dims(img, axis=0)    feature_map = model_e.predict(img)    return feature_mapdef plot_feature_map_grid(square, feature_array, title_name):    ix = 1    fignum, ax = plt.subplots(square, square, figsize=(5, 6), facecolor=(0.98,0.97,0.94,1))    for _ in range(square):        for _ in range(square):            #specify subplot and turn of axis            ax = plt.subplot(square, square, ix)            ax.set_xticks([])            ax.set_yticks([])            #plot filter channel in greyscale                        plt.imshow(feature_array[0, :, :, ix-1], cmap='gray')            ix +=1    featuretitle = title_name+'\n Feature Size= '+str(feature_array.shape[1]) + ' x '+ str(feature_array.shape[2])    fignum.suptitle(featuretitle, fontsize=14)    #fignum.tight_layout(pad=-.025)    plt.subplots_adjust(left=.05, right=.995, wspace = 0, hspace=.15)